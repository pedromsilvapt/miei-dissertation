body <- statement ( ";" statement )* _ ";"? _;

// Statements
statement <- _ ( var_declaration / instrument_declaration / function_declaration / for_loop_statement / expression ) _;

var_declaration <- "$" namespaced _ "=" _ expression;

instrument_declaration <- ":" alphanumeric _ "=" _ integer;

function_declaration <- "fun" _ namespaced _ "(" _ arguments? _ ")" _ "{" body "}";

arguments <- single_argument ( _ ";" _ single_argument )*;

single_argument <- single_argument_expr / single_argument_ref / single_argument_eval;

single_argument_expr <- "expr" _ "$" alphanumeric;

single_argument_ref <- "ref" _ "$" alphanumeric;

single_argument_eval <- "$" alphanumeric;

for_loop_statement <- "for" _ "$" namespaced _ "in" _ value_expression _ ".." _ value_expression _ "{" _ body? _ "}";

while_loop_statement <- "while" _ expression _ "{" _ body _ "}";

if_statement <- "if" _ expression _ "{" _ body _ "}";

expression <- music_expression / value_expression;

music_expression <- sequence ( _ "|" _ sequence )*;

sequence <- repeat ( _ repeat)*;

repeat
    <- expression_unambiguous _ "*" _ integer
     / expression_unambiguous
     ;

expression_unambiguous
    <- variable / function / group / chord / note / rest / modifier / instrument_modifier;

group <- "(" _ music_expression _ ")";

note <- note_accidental _ note_pitch ( _ note_value )?;

variable <- "$" namespaced;

function <- namespaced "(" _ function_parameters? _ ")";

function_parameters <- expression ( _ ";" _ expression )*;

chord <- "[" _ note ( _ note )* _ "]";

rest <- "r" ( _ note_value )?;

note_value
    <- "/" _ integer
     / integer _ "/" _ integer
     / integer
     ;

note_accidental <- "^" / "^^" / "__" / "_" / "";

note_pitch
    <- r"[cdefgab]" "'"*
     / r"[CDEFGAB]" ","*
     ;

modifier
    <- r"[tT]" _ integer
     / r"[vV]" _ integer
     / r"[lL]" _ note_value
     / r"[sS]" _ integer _ "/" _ integer
     / r"[sS]" _ integer
     / r"[oO]" _ integer
     ;

instrument_modifier <- ":" alphanumeric _ sequence;

value_expression <- string_value / number_value / variable / function;

string_value <- double_string / single_string;

double_string <- "\"" double_string_char* "\"";

double_string_char 
    <- "\\\""
     / "\\\\"
     / r"[^\"]"
     ;

single_string <- "'" single_string_char* "'";

single_string_char
    <- "\\'"
     / "\\\\"
     / r"[^']"
     ;

number_value <- float / integer;

float <- r"[0-9]+\.[0-9]+";

integer <- r"[0-9]+";

namespaced <- ( alphanumeric "\\" )* alphanumeric;

alphanumeric <- r"[a-zA-Z][a-zA-Z0-9\_]*";

_ <- r"[ \t\r\n]*";
