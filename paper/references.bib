@Misc{AbcNotation,
  key = "AbcNotation",
  title =     {The abc music standard - The tune body},
  year =      {2011},
  month =     {December},
  url =       "http://abcnotation.com/wiki/abc:standard:v2.1#the_tune_body"
}

@Book{AbcPlus,
  title =     {Making Music with ABC 2},
  author =    {Guido Gonzato},
  year =      {2019},
  month =     {December}
}

@article{doi:Chuck,
    author = {Wang, Ge and Cook, Perry R. and Salazar, Spencer},
    title = {ChucK: A Strongly Timed Computer Music Language},
    journal = {Computer Music Journal},
    volume = {39},
    number = {4},
    pages = {10-29},
    year = {2015},
    doi = {10.1162/COMJ\_a\_00324},
    URL = {https://doi.org/10.1162/COMJ_a_00324},
    eprint = {https://doi.org/10.1162/COMJ_a_00324},
    abstract = { ChucK is a programming language designed for computer music. It aims to be expressive and straightforward to read and write with respect to time and concurrency, and to provide a platform for precise audio synthesis and analysis and for rapid experimentation in computer music. In particular, ChucK defines the notion of a strongly timed audio programming language, comprising a versatile time-based programming model that allows programmers to flexibly and precisely control the flow of time in code and use the keyword now as a time-aware control construct, and gives programmers the ability to use the timing mechanism to realize sample-accurate concurrent programming. Several case studies are presented that illustrate the workings, properties, and personality of the language. We also discuss applications of ChucK in laptop orchestras, computer music pedagogy, and mobile music instruments. Properties and affordances of the language and its future directions are outlined. }
}


@article{doi:SuperCollider,
    author = {McCartney, James},
    title = {Rethinking the Computer Music Language: SuperCollider},
    journal = {Computer Music Journal},
    volume = {26},
    number = {4},
    pages = {61-68},
    year = {2002},
    doi = {10.1162/014892602320991383},
    URL = {https://doi.org/10.1162/014892602320991383},
    eprint = {https://doi.org/10.1162/014892602320991383}
}

@incollection{orlarey:Faust,
  TITLE = {{FAUST : an Efficient Functional Approach to DSP Programming}},
  AUTHOR = {Orlarey, Yann and Fober, Dominique and Letz, St{\'e}phane},
  URL = {https://hal.archives-ouvertes.fr/hal-02159014},
  BOOKTITLE = {{NEW COMPUTATIONAL PARADIGMS FOR COMPUTER MUSIC}},
  EDITOR = {Editions DELATOUR FRANCE},
  PAGES = {65-96},
  YEAR = {2009},
  KEYWORDS = {compiler ; dataflow ; functional ; processing ; programming ; real-time ; signal},
  PDF = {https://hal.archives-ouvertes.fr/hal-02159014/file/faust-chapter.pdf},
  HAL_ID = {hal-02159014},
  HAL_VERSION = {v1},
}


@article{doi:SonicPi,
    author = {Sam Aaron},
    title = {Sonic Pi â€“ performance in education, technology and art},
    journal = {International Journal of Performance Arts and Digital Media},
    volume = {12},
    number = {2},
    pages = {171-178},
    year  = {2016},
    publisher = {Routledge},
    doi = {10.1080/14794713.2016.1227593},
    URL = {https://doi.org/10.1080/14794713.2016.1227593},
    eprint = {https://doi.org/10.1080/14794713.2016.1227593}
}


@article{Loy1985MusiciansMA,
  title={Musicians make a standard: the MIDI phenomenon},
  author={Gareth Loy},
  journal={Computer Music Journal},
  year={1985},
  volume={9},
  pages={8-26}
}

@inproceedings{Aaron2014TemporalSF,
  title={Temporal semantics for a live coding language},
  author={Samuel Aaron and Dominic A. Orchard and Alan F. Blackwell},
  booktitle={FARM '14},
  year={2014}
}

@Misc{PEP255,
  key = "PEP255",
  title =     {PEP 255 -- Simple Generators},
  year =      {2001},
  month =     {May},
  url =       "https://www.python.org/dev/peps/pep-0255/",
  howpublished = "\url{https://www.python.org/dev/peps/pep-0255/}",
}

@Book{CraftingInterpreters,
  author =       {Bob Nystrom},
  title =        {Crafting Interpreters},
  year =         {2020}
}

@Misc{Quantization,
  key = "Quantization",
  title =     {Quantization music},
  url =       "https://en.wikipedia.org/wiki/Quantization_(music)",
  howpublished = "\url{https://en.wikipedia.org/wiki/Quantization_(music)}",
}

@Misc{GeneralMIDI,
  key = "GeneralMIDI",
  title =     {General Midi 1 Sound Set},
  url =       "https://www.midi.org/specifications-old/item/gm-level-1-sound-set",
  howpublished = "\url{https://www.midi.org/specifications-old/item/gm-level-1-sound-set}",
}

